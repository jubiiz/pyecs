PYECS brainstorm

the internal representation : like building a graph, where you have 
    - nodes
        - serve as directional pinpoints
        - can serve as voltage setting for battery (if you traverse a battery, check the voltage diff at both ends according to polarity (polarity is fixed))
    - edges 
        -the edges can represent the components (wire can be one of them : basically a 0.5ohm resistance)
        - for representation purposes : a node can be inserted for "resistance edges" (as the circuit is compiled for representation)
        - each edge will acquire as info : type (resistance, battery, ), resistance, polarity for each Ix traversing it (so dict {+:A, -:B} meaning current flows from b to a (if I is positive))

in order to solve simple and complex circuits: 
    - use loop algorithm available on the teacher's slide
    - summary:
        - batteries are a special edge: (voltages are set per-node): as you traverse it applies the voltage change (it closes the circuit)


the edges can be given an initial arbitrary direction (the graph is directed)
**tho will that fkup the propreties? (like traverse...)

maybe : build undirected graph
    extract all loops as directed graphs
    for each loop, pass through each edge (they'll have an arbitrary direction of traversal: loop direction, and a Â±Ix for each I in that direction)
    substract all RIx from the row matrix corresponding to that loop
    add all voltage changes to the 1x1 constant matrix
    solve matrix [Ax|b] for all x



    each
